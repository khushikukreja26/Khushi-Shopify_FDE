{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Aryan%20Sharma/Desktop/Xeno-fde/frontend/src/app/page.tsx"],"sourcesContent":["'use client';\nimport axios from 'axios';\nimport { useRouter } from 'next/navigation';\nimport { useEffect, useState } from 'react';\nimport {\n  Bar, BarChart, CartesianGrid, Line, LineChart,\n  ResponsiveContainer, Tooltip, XAxis, YAxis\n} from 'recharts';\n\nconst API = process.env.NEXT_PUBLIC_API_URL!;\ntype Overview = { totalCustomers: number; totalOrders: number; totalRevenue: number };\n\nfunction Card({ title, value }: { title: string; value: string | number }) {\n  return (\n    <div className=\"card p-4 md:p-5\">\n      <div className=\"text-xs text-brand-700/80\">{title}</div>\n      <div className=\"mt-1 text-3xl font-semibold text-gray-900\">{value}</div>\n    </div>\n  );\n}\n\nexport default function Home() {\n  const router = useRouter();\n\n  // we keep auth in state; API calls only run when this is set\n  const [auth, setAuth] = useState<{ token: string; tenantId: string } | null>(null);\n\n  const [overview, setOverview] = useState<Overview | null>(null);\n  const [series, setSeries] = useState<any[]>([]);\n  const [tops, setTops] = useState<any[]>([]);\n  const [from, setFrom] = useState('2000-01-01');\n  const [to, setTo] = useState('2099-12-31');\n\n  // read auth once on mount and gate the page\n  useEffect(() => {\n    const token = localStorage.getItem('token') || '';\n    const tenantId = localStorage.getItem('tenantId') || '';\n    if (!token || !tenantId) {\n      router.replace('/login');\n      return;\n    }\n    setAuth({ token, tenantId });\n  }, [router]);\n\n  async function load(a = auth) {\n    if (!a) return; // safety\n    const headers = { Authorization: `Bearer ${a.token}` };\n\n    // abortable to avoid races during fast navigation/logout\n    const ctrl = new AbortController();\n    try {\n      const [o, s, t] = await Promise.all([\n        axios.get(`${API}/api/sync/${a.tenantId}/metrics/overview`, { headers, signal: ctrl.signal }),\n        axios.get(`${API}/api/sync/${a.tenantId}/metrics/orders-by-date`, { params: { from, to }, headers, signal: ctrl.signal }),\n        axios.get(`${API}/api/sync/${a.tenantId}/metrics/top-customers`, { headers, signal: ctrl.signal }),\n      ]);\n      setOverview(o.data);\n      setSeries(s.data);\n      setTops(t.data);\n    } catch (err: any) {\n      if (axios.isCancel?.(err)) return;\n      console.error('load failed', err?.message || err);\n      // if token/tenant went missing mid-flight, bounce to login\n      const token = localStorage.getItem('token');\n      const tenantId = localStorage.getItem('tenantId');\n      if (!token || !tenantId) router.replace('/login');\n    }\n    return () => ctrl.abort();\n  }\n\n  function logout() {\n    // clear storage and local state, then go to login\n    localStorage.removeItem('token');\n    localStorage.removeItem('tenantId');\n    setAuth(null);\n    setOverview(null);\n    setSeries([]);\n    setTops([]);\n    router.replace('/login');\n  }\n\n  // load whenever auth is ready or dates change\n  useEffect(() => { if (auth) void load(auth); }, [auth, from, to]);\n\n  return (\n    <main className=\"space-y-6\">\n      {/* header card */}\n      <div className=\"card p-4 md:p-5 flex items-center justify-between\">\n        <div className=\"text-xl font-semibold text-gray-900\">Insights Dashboard</div>\n        <div className=\"flex gap-3\">\n          <button className=\"btn btn-solid\" onClick={() => load()}>Refresh</button>\n          <button className=\"btn-logout\" onClick={logout}>\n            <span className=\"inline-flex items-center gap-2\">\n              {/* tiny logout icon */}\n              <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\">\n                <path d=\"M15 17l5-5-5-5\" stroke=\"white\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                <path d=\"M20 12H9\" stroke=\"white\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\n                <path d=\"M12 20H7a3 3 0 0 1-3-3V7a3 3 0 0 1 3-3h5\" stroke=\"white\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\n              </svg>\n              Logout\n            </span>\n          </button>\n        </div>\n      </div>\n\n      <section className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <Card title=\"Total Customers\" value={overview?.totalCustomers ?? 0} />\n        <Card title=\"Total Orders\" value={overview?.totalOrders ?? 0} />\n        <Card title=\"Total Revenue\" value={`â‚¹ ${(overview?.totalRevenue ?? 0).toFixed(2)}`} />\n      </section>\n\n      <section className=\"space-y-2\">\n        <div className=\"flex flex-wrap items-center gap-2\">\n          <input className=\"input\" type=\"date\" value={from} onChange={e => setFrom(e.target.value)} />\n          <span className=\"text-gray-700\">to</span>\n          <input className=\"input\" type=\"date\" value={to} onChange={e => setTo(e.target.value)} />\n          <button className=\"btn btn-outline\" onClick={() => load()}>Filter</button>\n        </div>\n\n        <div className=\"card p-3 h-72\">\n          <ResponsiveContainer>\n            <LineChart data={series}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#fbcfe8\" />\n              <XAxis dataKey=\"d\" tick={{ fill: '#111827' }} />\n              <YAxis tick={{ fill: '#111827' }} />\n              <Tooltip />\n              <Line type=\"monotone\" dataKey=\"orders\" stroke=\"#f35098\" strokeWidth={2} dot={false} />\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n      </section>\n\n      <section className=\"space-y-2\">\n        <h2 className=\"text-lg font-semibold text-gray-900\">Top 5 Customers</h2>\n        <div className=\"card p-3 h-72\">\n          <ResponsiveContainer>\n            <BarChart data={tops}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#fbcfe8\" />\n              <XAxis dataKey=\"email\" tick={{ fill: '#111827' }} />\n              <YAxis tick={{ fill: '#111827' }} />\n              <Tooltip />\n              <Bar dataKey=\"spend\" fill=\"#fb79a5\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      </section>\n    </main>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}