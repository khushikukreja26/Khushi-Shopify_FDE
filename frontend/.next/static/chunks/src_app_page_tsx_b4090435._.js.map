{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Aryan%20Sharma/Desktop/Xeno-fde/frontend/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport {\n  Bar, BarChart, CartesianGrid, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis,\n} from 'recharts';\n\nconst API = process.env.NEXT_PUBLIC_API_URL!;\ntype Overview = { totalCustomers: number; totalOrders: number; totalRevenue: number };\n\n// ---------- UI bits ----------\nfunction Card({ title, value }: { title: string; value: string | number }) {\n  return (\n    <div className=\"card p-4 md:p-5 bg-pink-50 border border-pink-200 rounded-lg shadow\">\n      <div className=\"text-xs text-pink-700\">{title}</div>\n      <div className=\"mt-1 text-3xl font-semibold text-gray-900\">{value}</div>\n    </div>\n  );\n}\n\n// ---------- Mock data for the 2nd store ----------\nconst SECOND_TENANT_ID = 'second-shop-id'; // keep in sync with TenantSwitcher extra store\n\nconst MOCK_OVERVIEW: Overview = {\n  totalCustomers: 128,\n  totalOrders: 342,\n  totalRevenue: 673245.5,\n};\n\nconst MOCK_SERIES = [\n  { d: '2025-09-01', orders: 8 },\n  { d: '2025-09-02', orders: 12 },\n  { d: '2025-09-03', orders: 7 },\n  { d: '2025-09-04', orders: 15 },\n  { d: '2025-09-05', orders: 10 },\n  { d: '2025-09-06', orders: 14 },\n  { d: '2025-09-07', orders: 18 },\n];\n\nconst MOCK_TOPS = [\n  { email: 'aisha@example.com', spend: 21500 },\n  { email: 'rahul@example.com', spend: 18900 },\n  { email: 'neha@example.com', spend: 17450 },\n  { email: 'dev@example.com', spend: 16200 },\n  { email: 'kiran@example.com', spend: 15100 },\n];\n\n// ---------- Tenant Switcher (safe localStorage + extra store) ----------\nfunction TenantSwitcher({ onChange }: { onChange: () => void }) {\n  const [tenants, setTenants] = useState<any[]>([]);\n  const [activeTenant, setActiveTenant] = useState<string | null>(null);\n\n  useEffect(() => {\n    const token = typeof window !== 'undefined' ? localStorage.getItem('token') : null;\n    if (!token) return;\n\n    axios\n      .get(`${API}/api/tenants`, { headers: { Authorization: `Bearer ${token}` } })\n      .then((res) => {\n        // ✅ Add another store here (edit id/name/shopDomain as needed)\n        const extra = [\n          { id: SECOND_TENANT_ID, name: 'Second Shop', shopDomain: 'second-shop.myshopify.com' },\n        ];\n        const list = [...res.data, ...extra];\n\n        setTenants(list);\n\n        const saved = typeof window !== 'undefined' ? localStorage.getItem('tenantId') : null;\n        const valid = saved && list.some((t) => t.id === saved) ? saved : list[0]?.id ?? null;\n\n        setActiveTenant(valid);\n        if (valid) localStorage.setItem('tenantId', valid);\n        onChange();\n      })\n      .catch((err) => console.error(err));\n  }, [onChange]);\n\n  function handleChange(e: React.ChangeEvent<HTMLSelectElement>) {\n    const newTenant = e.target.value;\n    setActiveTenant(newTenant);\n    if (typeof window !== 'undefined') localStorage.setItem('tenantId', newTenant);\n    onChange();\n  }\n\n  return (\n    <div className=\"mb-4\">\n      <label className=\"mr-2 text-sm text-gray-600\">Select Store:</label>\n      <select\n        value={activeTenant ?? ''}\n        onChange={handleChange}\n        className=\"border border-pink-300 rounded px-2 py-1 focus:ring-pink-400 focus:border-pink-400\"\n      >\n        {tenants.length === 0 && <option value=\"\">Loading…</option>}\n        {tenants.map((t) => (\n          <option key={t.id} value={t.id}>\n            {t.name} ({t.shopDomain})\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n\n// ---------- Page ----------\nexport default function Home() {\n  const [overview, setOverview] = useState<Overview | null>(null);\n  const [series, setSeries] = useState<any[]>([]);\n  const [tops, setTops] = useState<any[]>([]);\n  const [from, setFrom] = useState('2000-01-01');\n  const [to, setTo] = useState('2099-12-31');\n\n  function auth() {\n    const token = typeof window !== 'undefined' ? localStorage.getItem('token') : null;\n    const tenantId = typeof window !== 'undefined' ? localStorage.getItem('tenantId') : null;\n    if (!tenantId) window.location.href = '/login';\n    return { token, tenantId };\n  }\n\n  function logout() {\n    if (typeof window !== 'undefined') {\n      localStorage.removeItem('token');\n      localStorage.removeItem('tenantId');\n      window.location.href = '/login';\n    }\n  }\n\n  async function load() {\n    const { token, tenantId } = auth();\n    if (!tenantId) return;\n\n    // If the second store is selected, show mock data\n    if (tenantId === SECOND_TENANT_ID) {\n      setOverview(MOCK_OVERVIEW);\n      setSeries(MOCK_SERIES);\n      setTops(MOCK_TOPS);\n      return;\n    }\n\n    const headers = token ? { Authorization: `Bearer ${token}` } : undefined;\n    const [o, s, t] = await Promise.all([\n      axios.get(`${API}/api/sync/${tenantId}/metrics/overview`, { headers }),\n      axios.get(`${API}/api/sync/${tenantId}/metrics/orders-by-date`, { params: { from, to }, headers }),\n      axios.get(`${API}/api/sync/${tenantId}/metrics/top-customers`, { headers }),\n    ]);\n    setOverview(o.data);\n    setSeries(s.data);\n    setTops(t.data);\n  }\n\n  useEffect(() => {\n    load();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <main className=\"space-y-6 p-6 bg-pink-50 min-h-screen\">\n      {/* Header */}\n      <div className=\"card p-4 md:p-5 flex items-center justify-between bg-white border border-pink-200 rounded-lg shadow\">\n        <div className=\"text-xl font-semibold text-gray-900\">Insights Dashboard</div>\n        <div className=\"flex gap-2\">\n          <button className=\"px-4 py-2 bg-pink-500 text-white rounded shadow hover:bg-pink-600\" onClick={load}>\n            Refresh\n          </button>\n          <button className=\"px-4 py-2 bg-gray-200 text-gray-900 rounded shadow hover:bg-gray-300\" onClick={logout}>\n            Logout\n          </button>\n        </div>\n      </div>\n\n      {/* Tenant Switcher */}\n      <TenantSwitcher onChange={load} />\n\n      {/* Overview Cards */}\n      <section className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <Card title=\"Total Customers\" value={overview?.totalCustomers ?? 0} />\n        <Card title=\"Total Orders\" value={overview?.totalOrders ?? 0} />\n        <Card title=\"Total Revenue\" value={`₹ ${(overview?.totalRevenue ?? 0).toFixed(2)}`} />\n      </section>\n\n      {/* Orders Chart */}\n      <section className=\"space-y-2\">\n        <div className=\"flex flex-wrap items-center gap-2\">\n          <input className=\"border rounded p-2 bg-white\" type=\"date\" value={from} onChange={(e) => setFrom(e.target.value)} />\n          <span className=\"text-gray-700\">to</span>\n          <input className=\"border rounded p-2 bg-white\" type=\"date\" value={to} onChange={(e) => setTo(e.target.value)} />\n          <button className=\"px-4 py-2 bg-pink-500 text-white rounded shadow hover:bg-pink-600\" onClick={load}>\n            Filter\n          </button>\n        </div>\n\n        <div className=\"card p-3 h-72 bg-white border border-pink-200 rounded-lg shadow\">\n          <ResponsiveContainer>\n            <LineChart data={series}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#fbcfe8\" />\n              <XAxis dataKey=\"d\" tick={{ fill: '#111827' }} />\n              <YAxis tick={{ fill: '#111827' }} />\n              <Tooltip />\n              <Line type=\"monotone\" dataKey=\"orders\" stroke=\"#f35098\" strokeWidth={2} dot={false} />\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n      </section>\n\n      {/* Top Customers */}\n      <section className=\"space-y-2\">\n        <h2 className=\"text-lg font-semibold text-gray-900\">Top 5 Customers</h2>\n        <div className=\"card p-3 h-72 bg-white border border-pink-200 rounded-lg shadow\">\n          <ResponsiveContainer>\n            <BarChart data={tops}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#fbcfe8\" />\n              <XAxis dataKey=\"email\" tick={{ fill: '#111827' }} />\n              <YAxis tick={{ fill: '#111827' }} />\n              <Tooltip />\n              <Bar dataKey=\"spend\" fill=\"#fb79a5\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      </section>\n    </main>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}}]
}